# Introduction to Go
24 Jun 2021
Tags: go, golang
Summary: Introduction to programming in Go

Ricardo Gerardi
Powerful Command-Line Applications in Go, Author
Senior Automation Consultant, Red Hat
@ricardogerardi

## Why Go

.background images/slide-back.png
.html html/go-cli.html
.caption _Go_ _Gopher_ (CC BY 3.0) original design by [[http://reneefrench.blogspot.com/][Renee French]]
: Concise: Reduced set of features / very expressive
: Go combines the reliability of statically typed compiled languages with the ease of use of dynamic languages
: Productivity
: No runtime dependencies - compiles to a single binary
: Rapid prototyping - problems solved in the concrete space
: Mention present software

## Hello Crypto World

.background images/slide-back.png
.play 01/main.go
.caption Powered by [[http://messari.io/][Messari]]

## Creating a Package

.background images/slide-back.png
.code crypto/crypto.go /^package/,/^\)$/

## Struct Tags

.background images/slide-back.png
.code crypto/crypto.go /^type/,/^\}$/

## Interfaces

.background images/slide-back.png
.code crypto/crypto.go /^func.*String/,/^\}$/

Implementing Stringer interface from fmt package:

.code src/fmt/print.go /^// Stringer is implemented/,/^}$/

: Typical pattern - one method interfaces
 
## Decoding JSON

.background images/slide-back.png
.code crypto/crypto.go /^func.*GetCrypto/,/^\}$/

## Using the New Package

.background images/slide-back.png
.play 03/main.go

## Input Arguments / Slices

.background images/slide-back.png
.play 04/main.go

## Loops

.background images/slide-back.png
.play 05/main.go

## Total Time

.background images/slide-back.png
.play 06/main.go  /^func.*main/,/^\}$/
.code 06/main.go  /^func.*printCryptoPrice/,/^\}$/

## Concurrency - goroutines

.background images/slide-back.png
.play 07/main.go  /^func.*main/,/^\}$/

## Concurrency Channels 1/2

.background images/slide-back.png
.code 08/main.go  /^func.*fetchCrypto/,/^\}$/
.code 08/main.go  /^func.*printCrypto/,/^\}$/

## Concurrency Channels 2/2

.background images/slide-back.png
.play 08/main.go  /^func.*main/,/^\}$/

## Cross-Compilation

.background images/slide-back.png

Compiling for Linux:

    $ go build -o crypto
    $ file crypto
    crypto: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), ...

Cross-Compiling for macOS:

    $ CGO_ENABLED=0 GOOS=darwin go build -o crypto
    $ file crypto
    crypto: Mach-O 64-bit x86_64 executable

## io.Writer Interface

.background images/slide-back.png
.play 09/main.go  /^func.*main/,/^\}$/
.code 09/main.go  /^func.*printCrypto/,/^\}$/

## Web Application

.background images/slide-back.png
.play 10/main.go  /^func.*main/,/^\}$/

## Using the Web Application

.background images/slide-back.png
---

    $ curl http://localhost:4000/prices?symbols=btc,eth,ltc
    Ethereum (ETH): $ 2016.58
    Litecoin (LTC): $ 129.72
    Bitcoin (BTC): $ 34115.73

## Learn More

.background images/slide-back.png
.link https://tour.golang.org/
.link https://play.golang.org/
.link https://golang.org/doc/
.link https://golang.org/doc/#get-started-tutorial
.link https://golang.org/doc/effective_go

## Powerful Command-Line Applications in Go

.background images/slide-back.png
.image images/rggo.jpg _ 300
.link https://pragprog.com/titles/rggo/powerful-command-line-applications-in-go/

Use promo code **LF2021** for 30% discount (until Jun 26, 2021)

## Summary

.background images/slide-back.png
- Go is concise yet powerful
- Go is fast
- Go has great community support and tooling
- Go is productive
- Go is fun !
